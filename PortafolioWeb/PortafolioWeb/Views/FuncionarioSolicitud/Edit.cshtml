@model PortafolioWeb.Models.SolicitudViewModel
@{
    Layout = null;
}
@Styles.Render("~/Content/snoAlertBox.css")
<h2>Editar solicitud</h2>
@using (Html.BeginForm("Edit", "FuncionarioSolicitud", FormMethod.Post, new { id = "popupForm" }))
{
    if (Model != null && Model.solicitud.ID_SOLICITUD > 0)
    {
        @Html.HiddenFor(a => a.solicitud.ID_SOLICITUD)
    }
    <fieldset>
        <div class="form-group">
            @Html.LabelFor(model => model.Tipos_Solicitud, "Tipo de solicitud", new { @class = "control-label col-md-4" })
            <div class="selectContainer">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>
                    @Html.DropDownListFor(model => model.Tipos_Solicitud, new SelectList(Model.Tipos_Solicitud, "ID_TIPOSOLICITUD", "DESCRIPCION"), "- Por favor seleccione -", new { id = "TipoSolicitud", @class = "form-control selectpicker", @onchange = "MostrarMotivos(); DiasDisponibles();" })
                    @Html.ValidationMessageFor(model => model.Tipos_Solicitud, "", new { @class = "text-danger" })
                </div>
                <div id="snoAlertBox" class="alert alert-info col-md-11" data-alert="alert"></div>
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.solicitud.FECHA_INICIO, "Fecha de inicio del permiso", new { @class = "control-label col-md-4" })
            <div class="inputGroupContainer">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                    @Html.TextBoxFor(model => model.solicitud.FECHA_INICIO, new { @placeholder = "Seleccione una fecha", @class = "form-control datepicker", @id = "datepicker" })
                    @Html.ValidationMessageFor(model => model.solicitud.FECHA_INICIO, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.solicitud.FECHA_FIN, "Fecha de finalización del permiso (inclusive)", new { @class = "control-label col-md-4" })
            <div class="inputGroupContainer">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                    @Html.TextBoxFor(model => model.solicitud.FECHA_FIN, new { @placeholder = "Seleccione una fecha", @class = "form-control datepicker", @id = "datepicker2" })
                    @Html.ValidationMessageFor(model => model.solicitud.FECHA_FIN, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-4">Descripción</label>
            <div class="inputGroupContainer">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                    <textarea id="descripcion" class="form-control" name="comment" placeholder="Ingrese descripción" ></textarea>
                    @Html.ValidationMessageFor(model => model.solicitud.DESCRIPCION, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-4"></label>
            <div class="input-group" align="center">
                <button type="submit" id="boton" class="btn btn-primary btn-sm">Modificar solicitud</button>
                @TempData["SuccessInsert"]
            </div>
        </div>
</fieldset>
}

        <script>



            function MostrarMotivos() {
                var id_tiposolicitud = $('#TipoSolicitud').val();
                $.ajax({
                    url: '/FuncionarioSolicitud/GetMotivos',
                    type: "GET",
                    dataType: "JSON",
                    data: { id_tiposolicitud: id_tiposolicitud },
                    success: function (motivos) {
                        $("#Motivos").html(""); // clear before appending new list
                        $.each(motivos, function (i, motivo) {
                            $("#Motivos").append(
                                $('<option></option>').val(motivo.ID_MOTIVO).html(motivo.DESCRIPCION));
                        });
                    },
                    error: function () {
                        alert("Algo salió mal.")
                    },
                });
            }

            $(document).ready(function () {
                $("#datepicker").keypress(function (e) {
                    e.preventDefault();
                });

                $("#datepicker2").keypress(function (e) {
                    e.preventDefault();
                });

                $(".datepicker").datepicker({
                    minDate: 0,
                    onSelect: function (dateText, inst) {
                        $("#datepicker2").datepicker("option", "minDate",
                        $("#datepicker").datepicker("getDate"));
                    }
                });
            });

            function DiasDisponibles() {

                var id_tiposolicitud = $('#TipoSolicitud').val();
                var rut = '@Session["rut"].ToString()';
                $.ajax({
                    url: '/FuncionarioSolicitud/GetPermisos',
                    type: "GET",
                    dataType: "JSON",
                    data: { id_tiposolicitud: id_tiposolicitud, rut: rut },
                    success: function (dias) {
                        $("#diasDisp").html(""); // clear before appending new list
                        $("#diasDisp").attr("max", dias);
                        var mensaje = dias + " días disponibles."
                        $("#snoAlertBox").html(mensaje.toString());
                        $("#snoAlertBox").fadeIn();
                        window.setTimeout(function () {
                            $("#snoAlertBox").fadeOut(300)
                        }, 3000);
                    },
                    error: function () {
                        alert("Algo salió mal.")
                    }
                });



            }
        </script>
